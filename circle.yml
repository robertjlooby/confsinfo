machine:
  services:
    - docker

dependencies:
  cache_directories:
    - frontend/elm-stuff/build-artifacts
    - frontend/test/elm-stuff/build-artifacts
    - ~/sysconfcpus
    - ~/closure-compiler
  pre:
    - |
      if [ ! -d $HOME/closure-compiler ];
      then
        cd $HOME;
        mkdir -p closure-compiler;
        curl -L https://dl.google.com/closure-compiler/compiler-latest.zip > closure-compiler/compiler.zip;
        apt-get install unzip;
        cd closure-compiler;
        unzip compiler.zip;
        mv closure-compiler-*.jar compiler.jar;
      fi
    - | # epic build time improvement - see https://github.com/elm-lang/elm-compiler/issues/1473#issuecomment-245704142
      if [ ! -d $HOME/sysconfcpus/bin ];
      then
        git clone https://github.com/obmarg/libsysconfcpus.git;
        cd libsysconfcpus;
        ./configure --prefix=$HOME/sysconfcpus;
        make && make install;
        cd ..;
      fi
    - npm install -g elm@0.18.0
    - npm install -g elm-test@0.18.2
    - mv $(npm config get prefix)/bin/elm-make $(npm config get prefix)/bin/elm-make-old
    - printf '%s\n\n' '#\!/bin/bash' 'echo "Running elm-make with sysconfcpus -n 2"' '$HOME/sysconfcpus/bin/sysconfcpus -n 2 elm-make-old "$@"' > $(npm config get prefix)/bin/elm-make
    - chmod +x $(npm config get prefix)/bin/elm-make
    - elm make --yes src/Main.elm --output ../backend/dist/elm.js:
        pwd: frontend
    - elm make --yes Main.elm --output /dev/null:
        pwd: frontend/tests
    - java -jar ~/closure-compiler/compiler.jar --js dist/elm.js --js_output_file dist/elm.min.js:
        pwd: backend
    - docker build --rm=false -t registry.heroku.com/confs-info/web .:
        pwd: backend

test:
  override:
    - elm-test:
        pwd: frontend
    - docker-compose -f docker-compose.ci.yml run test:
        pwd: backend

deployment:
  production:
    branch: master
    commands:
      - printf '%s\n' "machine api.heroku.com" "  login $HEROKU_EMAIL" "  password $HEROKU_API_TOKEN" > ~/.netrc
      - chmod 0600 ~/.netrc
      - heroku plugins:install heroku-container-registry
      - docker login --email=_ --username=_ --password=$(heroku auth:token) registry.heroku.com
      - docker push registry.heroku.com/confs-info/web
